<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mushbird.sinsege.base.module.display.dao.BaseDpNoticeItemMapMapper">
  <resultMap id="BaseResultMap" type="com.mushbird.sinsege.base.module.display.model.DpNoticeItemMap">
    <id column="TDNIM_DP_NOTI_ID" jdbcType="INTEGER" property="dpNotiId" />
    <id column="TDNIM_ITEM_ID" jdbcType="INTEGER" property="itemId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    TDNIM.DP_NOTI_ID as TDNIM_DP_NOTI_ID, TDNIM.ITEM_ID as TDNIM_ITEM_ID
  </sql>
  <select id="selectByEntityCriteria" parameterType="com.mushbird.sinsege.base.module.display.model.entity.criteria.DpNoticeItemMapEntityCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_noti_item_map TDNIM
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.mushbird.sinsege.base.module.display.model.entity.DpNoticeItemMapKey">
    delete from dp_noti_item_map
    where DP_NOTI_ID = #{dpNotiId,jdbcType=INTEGER}
      and ITEM_ID = #{itemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByEntityCriteria" parameterType="com.mushbird.sinsege.base.module.display.model.entity.criteria.DpNoticeItemMapEntityCriteria">
    delete TDNIM from dp_noti_item_map TDNIM
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mushbird.sinsege.base.module.display.model.entity.DpNoticeItemMapEntity">
    insert into dp_noti_item_map (DP_NOTI_ID, ITEM_ID)
    values (#{dpNotiId,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mushbird.sinsege.base.module.display.model.entity.DpNoticeItemMapEntity">
    insert into dp_noti_item_map
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dpNotiId != null">
        DP_NOTI_ID,
      </if>
      <if test="itemId != null">
        ITEM_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dpNotiId != null">
        #{dpNotiId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByEntityCriteria" parameterType="com.mushbird.sinsege.base.module.display.model.entity.criteria.DpNoticeItemMapEntityCriteria" resultType="java.lang.Long">
    select count(*) from dp_noti_item_map TDNIM
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByEntityCriteriaSelective" parameterType="map">
    update TDNIM
    <set>
      <if test="record.dpNotiId != null">
        
      </if>
      <if test="record.itemId != null">
        
      </if>
    </set>
    from dp_noti_item_map TDNIM
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByEntityCriteria" parameterType="map">
    update dp_noti_item_map TDNIM
    set 
      TDNIM.ITEM_ID = #{record.itemId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateNullByPrimaryKeySelective" parameterType="com.mushbird.sinsege.base.module.display.model.entity.DpNoticeItemMapEntity">
    update dp_noti_item_map
    <set />
    where 1=1
    and DP_NOTI_ID = #{dpNotiId,jdbcType=INTEGER}
    and ITEM_ID = #{itemId,jdbcType=INTEGER}
  </update>
</mapper>